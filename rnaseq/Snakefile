import os



# Required inputs
SPECIES    = "yeast"
TRANSCRIPT = SPECIES + ".fa"
NCBI_DIR   = os.path.expanduser("~/ncbi/public/sra")
TMPDIR     = "/db/sra/%s-tmp" % SPECIES

RUNIDS = [s.strip() for s in open("runids.txt").readlines()]
SRA_FILES = ["%s/%s.sra" % (NCBI_DIR, s) for s in RUNIDS]


# Optional inputs
THREADS = 8    # number of threads to use with Kallisto
KMER_SIZE = 31 # Kallisto default


# Derived values
INDEX   = SPECIES + ".index"
OUTDIR  = SPECIES + "-final-output"

SAMPLE_XML_DIR = OUTDIR + "/sample-xml"

rule all:
    input:
        SRA_FILES,
        INDEX

rule unpackSRA:
    output:

rule retrieveSRA:
    output:
        SRA_FILES
    shell:
        "for r in {RUNIDS}; do touch {NCBI_DIR}/${{r}}.sra; done"

rule buildIndex:
    input:
        TRANSCRIPT
    output:
        INDEX
    shell:
        "kallisto index --index={INDEX} --kmer-size={KMER_SIZE} {TRANSCRIPT}"

# rule getRunids:
#     input:
#         OUTDIR,
#         SAM_IDS
#     output:
#         RUN_IDS
#     shell:
#         "1_get_runids.sh -i {input} -s {SAMPLE_XML_DIR} > {output}"
#
# rule makeDirectories:
#     output:
#         OUTDIR,
#         TMPDIR
#     shell:
#         "mkdir -p {OUTDIR} {TMPDIR}"
#
#
# # Quantify expression of each run
# rule runKallisto:
#     input:
#         INDEX,
#         RUN_IDS
#     output:
#         OUTDIR + "/samples/{runid}.xml"
#     threads:
#         THREADS
#     shell:
#         "mkdir -p {OUTDIR}"
#
# rule retrieveSRA:
#     input:
#         RUN_IDS
#     output:
#         dynamic("{runid}.sra")
#     run:
#         with open {SAM_IDS} as f:
#             runids = f.readlines()
#             for r in runids:
#                 print(r)
